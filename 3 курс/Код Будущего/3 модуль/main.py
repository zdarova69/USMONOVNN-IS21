import json
import telebot
from telebot import types
import os
from collections import Counter
import re
import random as rn

class MyBot:
    def __init__(self):
        self.token = "2124988062:AAFPpqVZjYT9FnKaT8rPYzyUABrLBJw6XHE"
        self.bot = telebot.TeleBot(self.token)

        self.count = 0

        self.greeting_list = r"\b(–ü—Ä–∏–≤|–ó–¥—Ä–∞–≤—Å—Ç|–ó–¥–∞—Ä|Hello|Hi)\w*\b"
        self.farewell_list =  r"\b(–ü–æ–∫–∞|–ü—Ä–æ—â|bye|–î–æ—Å–≤–∏–¥)\w*\b"

        self.markup1 = types.InlineKeyboardMarkup(row_width=2)
        self.item0 = types.InlineKeyboardButton(text="–∏–≥—Ä–∞", callback_data="–∏–º—è")
        self.item1 = types.InlineKeyboardButton(text="—Ç–µ–∫—Å—Ç", callback_data="—Ö–æ–±–±–∏")
        self.item2 = types.InlineKeyboardButton(text="—Ñ–æ—Ç–æ", callback_data="–≤–æ–∑—Ä–∞—Å—Ç")
        self.item3 = types.InlineKeyboardButton(text="—Å—Ç–∏–∫–µ—Ä", callback_data="–∂–∏–º –ª–µ–∂–∞")     

        self.kb = self.markup1.add(self.item0, self.item1, self.item2, self.item3)

        self.markup_menu = types.ReplyKeyboardMarkup(row_width=2)
        
        self.btn1 = types.KeyboardButton(text='1')
        self.btn2 = types.KeyboardButton(text='2')
        self.btn3 = types.KeyboardButton(text='3')      
        self.btn4 = types.KeyboardButton(text='4')
        self.btn5 = types.KeyboardButton(text='5')      
        self.btn6 = types.KeyboardButton(text='6')

        self.markup_menu.add(self.btn1,self.btn2,self.btn3,self.btn4, self.btn5,self.btn6)
        

        self.a = [1,2,3,4,5,6]
        self.b = rn.choice(self.a)
        print(self.b)

    def run(self):
        @self.bot.message_handler(commands=['game'])
        def game(message):
            self.bot.reply_to(message, '–î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É - —Ä—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞. –í—ã–±–µ—Ä–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6 - –µ—Å–ª–∏ –Ω–µ –ø–æ–≤–µ–∑–µ—Ç - —Ç—ã —É–º—Ä–µ—à—å', reply_markup=self.markup_menu)
        @self.bot.message_handler(content_types=['sticker'])
        def uaaaa(message):
            self.bot.send_sticker(message.chat.id, sticker='CAACAgIAAxkBAAEDoBRl1OFpUBsuRXQ098-xnTztGiWznAACYw4AAsGPOUgDr1wPVUikVzQE')
        @self.bot.message_handler(commands=['photo'])
        def send_my_photo(message):
            photo = open('789.jpg', 'rb')
            self.bot.send_photo(message.chat.id, photo, '—ç—Ç–æ —Ç—ã')
        @self.bot.message_handler(commands=['text'])
        def send_my_photo(message):
            file_name = message.from_user.id

            with open(str(file_name) + '.txt', 'w', encoding='utf-8') as file:
                file.write(str(message))

            with open(str(file_name) + '.txt', 'r', encoding='utf-8') as file_to_write:
                self.bot.send_document(message.chat.id, file_to_write, caption='–≠—Ç–æ —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ')
            
        @self.bot.message_handler(commands=['start'])
        def welcome(message):
            
            self.bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ–¥–∞ –±—É–¥—É–∑–µ–≥–æ ü§°.. –Ø –º–æ–≥—É —Å—ã–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É. –ú–æ–≥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã /text. –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã /photo", reply_markup=self.kb)

                
        @self.bot.message_handler(content_types=['text'])
        def regex_answer(message):
            
            
            matches = re.findall(self.greeting_list, message.text, flags=re.IGNORECASE)
            if len(matches) >= 1:
                self.bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç')
            
            matches = re.findall(self.farewell_list, message.text, flags=re.IGNORECASE)
            if len(matches) >= 1:
                self.bot.reply_to(message, '–ü–æ–∫–∞')
            
            print(type(message.text))
            if message.text == str(self.b):
                print('—Ç—ã —É–º–µ—Ä')
                self.bot.reply_to(message, '–¢—ã —É–º–µ—Ä')
            else:
                pass

        
        #—Ä–∞–±–æ—Ç–∞ —Å json
        @self.bot.callback_query_handler(func=lambda call: True)
        def callback_inline(call):
            if call.data == "–∏–º—è":
                self.bot.send_message(call.message.chat.id, f" –º–æ–≥—É —Å—ã–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ /game")

            elif call.data == "—Ö–æ–±–±–∏":
                self.bot.send_message(call.message.chat.id, f" –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª,–æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ /text")

            elif call.data == "–≤–æ–∑—Ä–∞—Å—Ç":
                self.bot.send_message(call.message.chat.id, f"  –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã /photo")

            elif call.data == "–∂–∏–º –ª–µ–∂–∞":
                self.bot.send_message(call.message.chat.id, f" –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Å—Ç–∏–∫–µ—Ä,–æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–≥–æ –≤ –æ—Ç–≤–µ—Ç")

   
        self.bot.polling(none_stop=True)

if __name__ == '__main__':
    my_bot = MyBot()
    my_bot.run()
